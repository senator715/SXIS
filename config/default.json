{
/*
  To properly set up SXIS on a server,
  Adjust the service listening settings by assigning the server's IPv4 address to the "host" variable.
  If you intend to use Cloudflare, use port 80. Customize the "URL" to your domain,
  As it will be provided to the client when generating an image link.
*/
  "listen": {
    "host":     "127.0.0.1",
    "port":     80,
    "url":      "http://localhost/",
  },

/*
  To create custom uploader settings for ShareX, follow these steps:
    1. Create a new uploader and give it your chosen name.
    2. Set the request URL to your server's IP address, such as "http://localhost:80".
    3. Choose "Binary" as the Body type.
    4. In the headers section, add a "key" header and use the provided key.
    5. Additionally, add a title with the term "file" and set the value to "{filename}."
*/
  "api": {
    "key":                    "123",
    "data_folder":            "data/",
    "max_upload_size_bytes":  1073741824/*1GB*/,
  },

/*
  Understanding how SXIS works regarding the file encryption and compression mechanism
  Is essential. Firstly, SXIS Compresses files using "lossless compression"
  And utilizes SnappyjS to achieve this; the goal of compression in this instance
  Is not to save bandwidth for the client but to create smaller files on the server.

  The idea behind this mechanism is that the decryption key is only given to the client;
  This means that hackers will not be able to gain access to your sensitive documents;
  It's important to understand this mechanism, along with compression,
  Is not available for MP3/MP4 formats.
*/
  "file": {
    // Enable AES for file storage
    "aes": true,

    // AES bit must be 128, 192 or 256
    "aes_bit": 128,

    // The compress mode utilizes SnappyJS, a lossless compression method.
    "compress": true
  },

/*
  The Cleanup feature will get rid of any files that have been around
  for longer than the set time limit, known as max_file_life_seconds.
*/
  "cleanup": {
    "enabled":                false,
    "check_time_seconds":     60,
    "max_file_life_seconds":  604800/*7 Days*/
  },

/*
  The whitelist will control what people can upload; if you wish to add an extension,
  You must add a dot before the extension; use the example extensions below as a reference.
*/
  "whitelist": {
    "enabled":    false,
    "extensions": [
      ".txt",
      ".png",
      ".jpg",
      ".gif",
      ".zip",
      ".7z",
      ".exe",
      ".js",
      ".sh",
      ".json",
      ".txt",
      ".mp4",
      ".wav",
      ".mp3"
    ]
  }
}